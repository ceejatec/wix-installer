<?xml version='1.0' encoding='windows-1252'?>
<Wix xmlns='http://schemas.microsoft.com/wix/2006/wi'>

  <?include $(sys.CURRENTDIR)\Config.wxi?>
  <Product Id="*" Name="$(var.Company) $(var.ProductName)" Version="$(var.Version)" Manufacturer="Couchbase Inc."
      UpgradeCode="01510917-D2BC-91D4-FD65-4743E498A007"
      Language="1033" Codepage="1252">

    <Package Id="*" Keywords="Installer" Description="$(var.Company) $(var.ProductName) $(var.Version) Installer"
        Comments="Couchbase is a registered trademark of Couchbase Inc."
        Manufacturer="Couchbase Inc."
        Platform="x64"
        InstallerVersion="405" Languages="1033" Compressed="yes" SummaryCodepage="1252"/>

    <Media Id="1" Cabinet="Couchbase.cab" EmbedCab="yes" DiskPrompt="Only file"/>
    <Property Id="DiskPrompt" Value="$(var.Company) $(var.ProductName) $(var.Version) Installation [1]"/>

    <MajorUpgrade
        DowngradeErrorMessage="A later version of $(var.Company) $(var.ProductName) is already installed. Setup will now exit."/>

    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="ProgramFiles64Folder" Name="PFiles">
        <Directory Id="$(var.Company)" Name="$(var.Company)">
          <Directory Id="INSTALLDIR" Name="$(var.ProductName)"/>
          <!-- Contents of this directory generated by heat in Files.wxs -->
        </Directory>
      </Directory>
      <Merge Id="VCRedist_140" SourceFile="$(env.CommonProgramFiles(x86))\Merge Modules\Microsoft_VC140_CRT_x64.msm" DiskId="1" Language="0"/>
      <Merge Id="VCRedist_120" SourceFile="$(env.CommonProgramFiles(x86))\Merge Modules\Microsoft_VC120_CRT_x64.msm" DiskId="1" Language="0"/>
      <Merge Id="VCRedist_100" SourceFile="$(env.CommonProgramFiles(x86))\Merge Modules\Microsoft_VC100_CRT_x64.msm" DiskId="1" Language="0"/>
    </Directory>

    <Feature Id="Complete" Level="1" Title="Couchbase Server" Description="The Complete Package."
        ConfigurableDirectory="INSTALLDIR">
      <ComponentGroupRef Id="CouchbaseServer"/>
    </Feature>

    <Feature Id="VCRedist" Title="Visual C++ Runtimes" AllowAdvertise="no" Display="hidden" Level="1">
      <MergeRef Id="VCRedist_140"/>
      <MergeRef Id="VCRedist_120"/>
      <MergeRef Id="VCRedist_100"/>
    </Feature>

    <!-- Custom action to fix up config files based on installation dir -->
    <SetProperty Id="FixConfig" Value="&quot;[SystemFolder]cmd.exe&quot; /c &quot;&quot;[INSTALLDIR]\bin\fixpaths.cmd&quot; &quot;[INSTALLDIR]&quot;&quot;" Before="FixConfig" Sequence="execute"/>
    <CustomAction Id="FixConfig" Execute="deferred" BinaryKey="WixCA" DllEntry="WixQuietExec64" Return="check"/>

    <!-- Custom action to register the Erlang service -->
    <SetProperty Id="RegisterService" Value="&quot;[SystemFolder]cmd.exe&quot; /c &quot;&quot;[INSTALLDIR]\bin\service_register.bat&quot;" Before="RegisterService" Sequence="execute"/>
    <CustomAction Id="RegisterService" Execute="deferred" BinaryKey="WixCA" DllEntry="WixQuietExec64" Return="check"/>

    <!-- Custom action to start the Erlang service -->
    <SetProperty Id="StartService" Value="&quot;[SystemFolder]cmd.exe&quot; /c &quot;&quot;[INSTALLDIR]\bin\service_start.bat&quot;" Before="StartService" Sequence="execute"/>
    <CustomAction Id="StartService" Execute="deferred" BinaryKey="WixCA" DllEntry="WixQuietExec64" Return="check"/>

    <!-- Custom action to stop the Erlang service - this one must -->
    <!-- NOT be deferred, as it needs to actually execute prior to the -->
    <!-- InstallValidate step to prevent a reboot prompt. We ignore the -->
    <!-- return value; we don't want an error to prevent uninstallation. -->
    <!-- This is technically naughty as we should not "modify the system" -->
    <!-- outside the InstallValidate/InstallFinalize pair, but it was the -->
    <!-- only solution I could find to work. Since we ignore the return -->
    <!-- value, it should not cause the Installer system to leave things -->
    <!-- in a broken state; the worst that will happen is that if the -->
    <!-- uninstall fails for some other reason, the CouchbaseServer Service -->
    <!-- will remain stopped. -->
    <CustomAction Id="StopServiceCmd" Execute="immediate" Property="WixQuietExec64CmdLine" Value="&quot;[SystemFolder]cmd.exe&quot; /c &quot;&quot;[INSTALLDIR]\bin\service_stop.bat&quot;"/>
    <CustomAction Id="StopService" Execute="immediate" BinaryKey="WixCA" DllEntry="WixQuietExec64" Return="ignore"/>

    <!-- Custom action to unregister the Erlang service - this can be -->
    <!-- deferred to possibly allow for better rollback -->
    <SetProperty Id="UnregisterService" Value="&quot;[SystemFolder]cmd.exe&quot; /c &quot;&quot;[INSTALLDIR]\bin\service_unregister.bat&quot;" Before="UnregisterService" Sequence="execute"/>
    <CustomAction Id="UnregisterService" Execute="deferred" BinaryKey="WixCA" DllEntry="WixQuietExec64" Return="check"/>

    <InstallExecuteSequence>
      <!-- Actions to do when REMOVE set, ie. Uninstall or Major Upgrade -->

      <!-- Stop Service -->
      <Custom Action="StopServiceCmd" Before="StopService">REMOVE</Custom>
      <Custom Action="StopService" Before="InstallValidate">REMOVE</Custom>

      <!-- Unregister Service -->
      <Custom Action="UnregisterService" Before="RemoveFiles">REMOVE</Custom>

      <!-- Actions to do when not installed, ie. fresh Install or Major Upgrade -->

      <!-- Fix Config files -->
      <Custom Action="FixConfig" After="InstallFiles">NOT Installed</Custom>

      <!-- Register Service -->
      <Custom Action="RegisterService" After="FixConfig">NOT Installed</Custom>

      <!-- Start Service -->
      <Custom Action="StartService" After="RegisterService">NOT Installed</Custom>

    </InstallExecuteSequence>

    <!-- Load in "InstallDir" UI toolkit -->
    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR"/>
    <UIRef Id="WixUI_InstallDir"/>
    <UIRef Id="WixUI_ErrorProgressText"/>

  </Product>
</Wix>
